variables:
  NET_VERSION: '8.0.x'
  NET_CORE_VERSION: '3.1.x'
  PathToSolution: 'GitTrends.sln'
  PathToGitTrendsCsproj: 'GitTrends/GitTrends.csproj'
  PathToUITestsCsproj: 'GitTrends.UITests/GitTrends.UITests.csproj'
  PathToUnitTestsCsproj: 'GitTrends.UnitTests/GitTrends.UnitTests.csproj'
  PathToAzureFunctionsCsproj: 'GitTrends.Functions/GitTrends.Functions.csproj'
  XcodeVersion: '15.4'

trigger:
  branches:
    include:
    - main
  tags:
    include:
    - '*'
  paths:
    exclude:
    - README.md

pr:
  autoCancel: 'true'
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md

jobs:
  - job: Build_AzureFunctions
    displayName: Build Azure Functions
    pool: 
      vmImage: windows-latest

    steps:      
      - task: UseDotNet@2
        displayName: 'Install Latest .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '$(NET_VERSION)'

      - task: VSBuild@1
        displayName: 'Build Azure Functions'
        inputs:
          solution: '$(PathToAzureFunctionsCsproj)'
          configuration: 'Release'
          msbuildArgs: '/restore'

  - job: Build_MAUI_App
    displayName: Build .NET MAUI App
    pool: 
      vmImage: macos-latest

    steps:      
      - task: UseDotNet@2
        displayName: 'Install Latest .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '$(NET_VERSION)'

      - task: CmdLine@2
        displayName: 'Install Latest .NET MAUI Workload'
        inputs:
          script: 'dotnet workload install maui'

      - task: JavaToolInstaller@0
        displayName: 'Install Java'
        inputs:
          versionSpec: '11'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - task: CmdLine@2
        displayName: 'Build GitTrends'
        inputs:
          script: 'dotnet build $(PathToGitTrendsCsproj) -c Release'

  - job: Build_UnitTests
    displayName: Build Unit Tests
    pool: 
      vmImage: windows-latest

    steps:      
      - task: UseDotNet@2
        displayName: 'Install Latest .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '$(NET_VERSION)'

      - task: UseDotNet@2
        displayName: 'Install $(NET_CORE_VERSION)'
        inputs:
          packageType: 'sdk'
          version: '$(NET_CORE_VERSION)'

      - task: CmdLine@2
        displayName: 'Install Latest .NET MAUI Workload'
        inputs:
          script: 'dotnet workload install maui'

      - task: VSBuild@1
        displayName: 'Build Unit Tests'
        inputs:
          solution: '$(PathToUnitTestsCsproj)'
          configuration: 'Release'
          msbuildArgs: '/restore'

  - job: Run_UnitTests
    displayName: Run Unit Tests
    dependsOn: [Build_UnitTests, Build_MAUI_App]
    pool: 
      vmImage: macos-14

    steps:      
      - task: CmdLine@2
        displayName: 'Set Xcode v$(XcodeVersion)'
        condition: eq(variables['Agent.OS'], 'Darwin') # Only run this step on macOS
        inputs:
          script: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_$(XcodeVersion).app;sudo xcode-select --switch /Applications/Xcode_$(XcodeVersion).app/Contents/Developer

      - task: UseDotNet@2
        displayName: 'Install Latest .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '$(NET_VERSION)'

      - task: UseDotNet@2
        displayName: 'Install .NET Core 3.1 SDK'
        inputs:
          packageType: 'sdk'
          version: '$(NET_CORE_VERSION)'

      - task: CmdLine@2
        displayName: 'Inject API Keys'
        inputs:
          script: |
            set -e

            AzureConstantsFile=`find . -name AzureConstants.cs | head -1`
            echo AzureConstantsFile = $AzureConstantsFile

            sed -i '' "s/GetTestTokenApiKey = \"\"/GetTestTokenApiKey = \"$(GETTESTTOKENAPIKEY)\"/g" "$AzureConstantsFile"  
            sed -i '' "s/GetAppCenterApiKeysKey = \"\"/GetAppCenterApiKeysKey = \"$(GETAPPCENTERAPIKEYSKEY)\"/g" "$AzureConstantsFile"
            sed -i '' "s/GetSyncFusionInformationApiKey = \"\"/GetSyncFusionInformationApiKey = \"$(GETSYNCFUSIONINFORMATIONAPIKEY)\"/g" "$AzureConstantsFile"
            sed -i '' "s/GetNotificationHubInformationApiKey = \"\"/GetNotificationHubInformationApiKey = \"$(GETNOTIFICATIONHUBINFORMATIONAPIKEY)\"/g" "$AzureConstantsFile"
            sed -i '' "s/#error Missing API Keys/\/\/#error Missing API Keys/g" "$AzureConstantsFile"

      - task: CmdLine@2
        displayName: 'Run Unit Tests'
        inputs:
          script: 'dotnet test $(PathToUnitTestsCsproj) -c Release -d detailed'
